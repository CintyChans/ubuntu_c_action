name: hosted-ninja-vcpkg_submod-autocache
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: [windows-latest]
    steps:
      #-uses: actions/cache@v1   <===== YOU DO NOT NEED THIS!

      # Install latest CMake.
      - uses: lukka/get-cmake@latest
      # Or pin to a specific CMake version:
      # lukka/get-cmake@v3.21.2

      # Restore from cache the previously built ports. If a "cache miss" occurs,
      # then vcpkg is bootstrapped. Since a the vcpkg.json is being used later on
      # to install the packages when `run-cmake` runs, no packages are installed at
      # this time.
      # 从缓存还原以前构建的端口。如果发生“缓存未命中”，则 vcpkg 将引导。
      #由于稍后在“run-cmake”运行时使用 vcpkg.json 来安装软件包，因此目前不会安装任何软件包。
      - name: Restore artifacts, or setup vcpkg (do not install any package)
        uses: lukka/run-vcpkg@v10
        with:
          # This is the default location of the directory containing vcpkg sources.
          # Change it to the right location if needed.
          #这是包含 vcpkg 源的目录的默认位置。
          # 如果需要，将其更改为正确的位置。
          vcpkgDirectory: './vcpkg'

          # If not using a submodule for vcpkg sources, this specifies which commit
          # id must be checkout from a Git repo. It must not set if using a submodule
          # for vcpkg.
          # 如果不对 vcpkg 源使用子模块，则指定必须从 Git 存储库签出哪个提交 ID。如果使用 vcpkg 的子模块，则不得设置。
          # vcpkgGitCommitId: '${{ matrix.vcpkgCommitId }}'

          # This is the glob expression used to locate the vcpkg.json and add its
          # hash to the cache key. Change it to match a single manifest file you want
          # to use. 
          # 这是用于定位 vcpkg.json 并将其哈希添加到缓存键的 glob 表达式。更改它以匹配要使用的单个清单文件。
          # Note: do not use `${{ github.context }}` to compose the value as it 
          # contains backslashes that would be misinterpreted. Instead
          # compose a value relative to the root of the repository using 
          # `**/path/from/root/of/repo/to/vcpkg.json` to match the desired `vcpkg.json`.
          # 注意：不要使用“${{ github.context }}”来组合值包含会被误解的反斜杠。而是使用
          # '**/path/from/root/of/repo/to/vcpkg.json' 以匹配所需的 'vcpkg.json'。
          vcpkgJsonGlob: './vcpkg.json'

          # This is needed to run `vcpkg install` command (after vcpkg is built) in
          # the directory where vcpkg.json has been located. Default is false,
          # It is highly suggested to let `run-cmake` to run vcpkg (i.e. `false`)
          # (i.e. let CMake run `vcpkg install`) using the vcpkg.cmake toolchain.
          # 这是在 vcpkg.json 所在的目录中运行 'vcpkg install' 命令（在 vcpkg 构建之后）所必需的。默认为 false，强烈建议让 'run-cmake' 运行 vcpkg（即 'false'）
          # （即让CMake使用vcpkg.cmake工具链运行“vcpkg install”。
          # runVcpkgInstall: true

     # The following `run` step is useful to prevent storing partial cache in the GH cache
     # service.
     # This is useful when vcpkg is not run at `run-vcpkg`'s runtime, but later when CMake 
     # is running, e.g. at `run-cmake` runtime. 
     # Driving the environment variable `RUNVCPKG_NO_CACHE`, at the end of the workflow the  
     # `run-vcpkg` post step is instructed to not save anything when the workflow has been 
     # cancelled or it has failed.
     # 以下“运行”步骤有助于防止在 GH 缓存服务中存储部分缓存。
     # 当 vcpkg 不在 'run-vcpkg' 运行时运行时，而是在 CMake 运行时运行时，例如在 'run-cmake' 运行时运行时，这很有用。
     # 驱动环境变量 'RUNVCPKG_NO_CACHE'，在工作流结束时指示“run-vcpkg”后步骤在工作流被取消或失败时不保存任何内容。
     #- run: |
     #    echo "RUNVCPKG_NO_CACHE=1" >> $GITHUB_ENV
     #  if: ${{ failure() || cancelled() }}
     #  shell: bash

      - name: Run CMake consuming CMakePreset.json and vcpkg.json by mean of vcpkg.
        uses: lukka/run-cmake@v10
        with:
          # This is the default path to the CMakeLists.txt along side the
          # CMakePresets.json. Change if you need have CMakeLists.txt and CMakePresets.json
          # located elsewhere.
          # 这是 CMakeList.txt 和CMakePresets.json 的默认路径CMakePresets.json.如果需要，请更改 CMakeLists.txt 和 CMakePresets.json 位于其他地方。
          cmakeListsTxtPath: './CMakeLists.txt'
      
          # This is the name of the CMakePresets.json's configuration to use to generate
          # the project files. This configuration leverages the vcpkg.cmake toolchain file to
          # run vcpkg and install all dependencies specified in vcpkg.json.
          # 这是用于生成项目文件的 CMakePresets.json 配置的名称。此配置利用 vcpkg.cmake 工具链文件来运行 vcpkg 并安装 vcpkg.json 中指定的所有依赖项。
          configurePreset: 'ninja-multi-vcpkg'

          # This is the name of the CMakePresets.json's configuration to build the project.
          # 这是 CMakePresets.json 用于构建项目的配置的名称。
          buildPreset: 'ninja-multi-vcpkg'

    #env:
    #  By default the action disables vcpkg's telemetry by defining VCPKG_DISABLE_METRICS. 
    #  This behavior can be disabled by defining `VCPKG_ENABLE_METRICS` as follows.
    #  VCPKG_ENABLE_METRICS: 1 
    #
    #  [OPTIONAL] Define the vcpkg's triplet you want to enforce, otherwise the default one
    #  for the hosting system will be automatically choosen (x64 is the default on all 
    #  platforms, e.g. `x64-osx`).
    #  VCPKG_DEFAULT_TRIPLET: ${{ matrix.triplet }} 
